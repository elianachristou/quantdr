% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/llqr.R
\name{llqr}
\alias{llqr}
\title{Local linear quantile estimation}
\usage{
llqr(x, y, tau = 0.5, h, method = "rule", x0)
}
\arguments{
\item{x}{A design matrix.  The rows represent observations and the columns
represent predictor variables.}

\item{y}{A vector of the response variable.}

\item{tau}{A quantile level, a number strictly between 0 and 1.}

\item{h}{A univariate bandwidth.  If not specified, the bandwidth will be
defined using either "\code{rule}" or "\code{CV}".  See \code{method} below
for details.}

\item{method}{A character string specifying the method to select the
bandwidth, if it is missing.  Use "\code{rule}" for the rule-of-thumb
bandwidth of Yu and Jones (1994) or "\code{CV}" for the method of
cross-validation.}

\item{x0}{A single observation for which to perform the estimation.  It needs
to be a singular value, for a univariate predictor, or a vector, for a
multivariate predictor.  If \code{x0} is missing, the estimation will be
performed on the design matrix \code{x}.}
}
\value{
\code{llqr} computes the local linear \eqn{\tau}-th conditional
  quantile estimator of \code{y} given \code{x}, and returns:

  \code{ll_est}   The estimated function value at the design points \code{x}
  or, if specified, at the point \code{x0}.

  \code{h}  The bandwidth.
}
\description{
\code{llqr} estimates the \eqn{\tau}-th conditional quantile of \code{y}
given \code{x} based on a local linear fit.  The estimation is performed at
each of the design points or, if specified, at a single observation point
\code{x0}.
}
\details{
The function computes the local linear quantile regression fit for a
specified quantile level \eqn{\tau} at the design points of the matrix
\code{x} or at a pre-specified point \code{x0}.  The estimation is based on a
standard normal kernel and a univariate bandwidth.  The bandwidth, if not
specified by the user, is defined using either the rule-of-thumb given by Yu
and Jones (1994) or the cross-validation criterion.

The estimation applies to univariate and multivariate predictor variables.
For the later, the local linear fit uses the multivariate standard normal
kernel. Note that if the estimation is performed at a pre-specified point
\code{x0} then \code{x0} should be a scalar (for univariate predictor) or a
vector (for multivariate predictor).
}
\examples{

# estimate the function for different quantile levels
set.seed(1234)
n <- 100
x <- rnorm(n); error <- rnorm(n); y <- (x + 1)^3 + 0.1 * (x - 2)^3 + error
taus <- c(0.1, 0.25, 0.5, 0.75, 0.9)
par(mfrow=c(2, 3))
for (i in 1:length(taus)) {
plot(x, y, main = taus[i])
points(x, llqr(x, y, tau = taus[i])$ll_est, col = 'red', pch = 16)
}

# estimate the function at a point x0=1
set.seed(1234)
n <- 100
x <- rnorm(n); error <- rnorm(n); y <- (x + 1)^3 + 0.1 * (x - 2)^3 + error
tau = 0.5
x0 = 1
llqr(x, y, tau = tau, x0 = x0)

# demonstrate the function estimation for different quantile levels
par(mfrow=c(1, 1))
data("mcycle", package="MASS")
attach(mcycle)
plot(times,accel,xlab = "milliseconds", ylab = "acceleration (in g)")
taus <- c(0.1, 0.25, 0.5, 0.75, 0.9)
for(i in 1:length(taus)) {
 fit <- llqr(times, accel, tau = taus[i])$ll_est
 lines(times, fit ,lty=i)
}
legend(38,-50,c("tau=0.1","tau=0.25","tau=0.5","tau=0.75", "tau=0.9"), lty=1:length(taus))

\dontrun{
n <- 100
x <- cbind(rnorm(n), rnorm(n)); error <- rnorm(100); y <- x[, 1]^2 + error
x0=1
tau=0.5
llqr(x, y, tau=tau, x0=x0)$ll_est
}
}
\references{
Yu, K. and Jones, M.C. (1998), Local linear quantile regression.
  \emph{Journal of the American Statistical Association}, 93, 228-237.
}
