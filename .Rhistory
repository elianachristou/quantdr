file.path(R.home("doc"), "KEYWORDS")
# Create an .Rd file.  Add this to the R file and use
# or press Ctrl+Shift+D
devtools::document()
?llqr
?llqr
# Create an .Rd file.  Add this to the R file and use
# or press Ctrl+Shift+D
devtools::document()
lintr::lint_package()
devtools::load_all()
# Create an .Rd file.  Add this to the R file and use
# or press Ctrl+Shift+D
devtools::document()
?llqr
# Create an .Rd file.  Add this to the R file and use
# or press Ctrl+Shift+D
devtools::document()
lintr::lint_package()
?llqr
package?quantdr
package?dr
# Create an .Rd file.  Add this to the R file and use
# or press Ctrl+Shift+D
devtools::document()
package?quantdr
?quantdr
devtools::load_all()
# Create an .Rd file.  Add this to the R file and use
# or press Ctrl+Shift+D
devtools::document()
?llqr
devtools::load_all()
devtools::load_all()
# Create an .Rd file.  Add this to the R file and use
# or press Ctrl+Shift+D
devtools::document()
lintr::lint_package()
lintr::lint_package()
devtools::load_all()
# Create an .Rd file.  Add this to the R file and use
# or press Ctrl+Shift+D
devtools::document()
?llqr
# Create an .Rd file.  Add this to the R file and use
# or press Ctrl+Shift+D
devtools::document()
devtools::load_all()
# Create an .Rd file.  Add this to the R file and use
# or press Ctrl+Shift+D
devtools::document()
?llqr
# add the dependencies in the DESCRIPTION file
devtools::use_package('quantreg')
devtools::load_all()
# Create an .Rd file.  Add this to the R file and use
# or press Ctrl+Shift+D
devtools::document()
?llqr
devtools::load_all()
# Create an .Rd file.  Add this to the R file and use
# or press Ctrl+Shift+D
devtools::document()
?llqr
browseVignettes()
browseVignettes()
# to see all the vignettes of the packages I've installed
# the source file gives you the source of the document! Useful!
browseVignettes()
# to create my first vignette
devtools::use_vignette("quantdr vignette")
# to create my first vignette
devtools::use_vignette("quantdr-vignette")
# to create my first vignette
devtools::use_vignette("my-vignette")
# to create my first vignette
devtools::use_vignette("my-vignette")
# to create my first vignette
devtools::use_vignette("my-vignette")
devtools::load_all()
# Create an .Rd file.  Add this to the R file and use
# or press Ctrl+Shift+D
devtools::document()
# to create my first vignette
devtools::use_vignette("my-vignette")
install.packages(c('devtools', 'roxygen2', 'testhat', 'knitr'))
install.packages('rstudioapi')
rstudioapi::isAvailable('0.99.149')
devtools::install_github('r-lib/devtools')
library(devtools)
has_devel()
# re-load your code and save all open files or use Ctrl+Shift+L
devtools::load_all(".")
devtools::load_all()
# Create an .Rd file.  Add this to the R file and use
# or press Ctrl+Shift+D
devtools::document()
# to create my first vignette
devtools::use_vignette("my-vignette")
# to create my first vignette
install.packages('rmarkdown')
devtools::use_vignette("my-vignette")
library(devtools)
devtools::use_vignette("my-vignette")
devtools::build_vignette()
usethis::use_vignette("my-vignette")
devtools::load_all()
# Create an .Rd file.  Add this to the R file and use
# or press Ctrl+Shift+D
devtools::document()
devtools::load_all()
# Create an .Rd file.  Add this to the R file and use
# or press Ctrl+Shift+D
devtools::document()
devtools::load_all()
devtools::load_all()
# Create an .Rd file.  Add this to the R file and use
# or press Ctrl+Shift+D
devtools::document()
usethis::use_vignette("my-vignette")
usethis::use_vignette("quantdr")
# to see all the vignettes of the packages I've installed
# the source file gives you the source of the document! Useful!
browseVignettes()
install.packages(c('devtools', 'roxygen2', 'testhat', 'knitr'))
install.packages('rstudioapi')
rstudioapi::isAvailable('0.99.149')
devtools::install_github('r-lib/devtools')
library(devtools)
has_devel()
# re-load your code and save all open files or use Ctrl+Shift+L
devtools::load_all(".")
n=100
x=rnorm(100); error=rnorm(100); y=x^2+error
tau=0.5
llqr(x,y,tau=tau)
library(quantreg) # for quantile regression
library(mvtnorm) # for multivariate kernel
library(KernSmooth) # for dpill function
library(dr)
llqr(x,y,tau=tau)
llqr(x,y,tau=tau, method='CV')
# for testing
devtools::use_testhat()
# for testing
usethis::use_testthat()
test_check("quantdr")
library(testthat)
library(quantdr)
test_check("quantdr")
test_check("quantdr")
test_check("quantdr")
test_check("quantdr")
# for testing
usethis::use_testthat()
devtools::test
devtools::test()
devtools::test()
devtools::test()
devtools::test()
n <- 100
x <- cbind(rnorm(n), rnorm(n)); error <- rnorm(100); y <- x[, 1]^2 + error
x0=1
tau=0.5
llqr(x, y, tau=tau, x0=x0)$ll_est
# Create an .Rd file.  Add this to the R file and use
# or press Ctrl+Shift+D
devtools::document()
devtools::load_all()
llqr(x, y, tau=tau, x0=x0)$ll_est
expect_match(llqr(x, y, tau=tau, x0=x0)$ll_est, "The dimension of x0 needs to be the same as the number of columns of x")
expect_output(llqr(x, y, tau=tau, x0=x0)$ll_est, "The dimension of x0 needs to be the same as the number of columns of x")
llqr(x, y, tau=tau, x0=x0)$ll_est
expect_message(llqr(x, y, tau=tau, x0=x0)$ll_est, "The dimension of x0 needs to be the same as the number of columns of x")
expect_warning(llqr(x, y, tau=tau, x0=x0)$ll_est, "The dimension of x0 needs to be the same as the number of columns of x")
expect_error(llqr(x, y, tau=tau, x0=x0)$ll_est, "The dimension of x0 needs to be the same as the number of columns of x")
expect_match(10, 10)
expect_equal(10, 10)
expect_equal(10, 10)
set.seed(1234)
n <- 100
x <- rnorm(100); error <- rnorm(100); y <- x^2 + error
tau <- 0.5
x0 <- 1
llqr(x, y, tau=tau, x0=x0)$ll_est
set.seed(1234)
n <- 100
x <- cbind(rnorm(n), rnorm(n)); error <- rnorm(100); y <- x[, 1]^2 + error
tau <- 0.5
x0 <- 1
llqr(x, y, tau=tau, x0=x0)$ll_est
test_that("Local linear estimation at x0", {
set.seed(1234)
n <- 100
x <- cbind(rnorm(n), rnorm(n)); error <- rnorm(100); y <- x[, 1]^2 + error
tau <- 0.5
x0 <- 1
expect_message(llqr(x, y, tau=tau, x0=x0)$ll_est, )
})
llqr(x, y, tau=tau, x0=x0)$ll_est
devtools::test()
devtools::test()
test_that("Local linear estimation at x0", {
set.seed(1234)
n <- 100
x <- cbind(rnorm(n), rnorm(n)); error <- rnorm(100); y <- x[, 1]^2 + error
tau <- 0.5
x0 <- 1
expect_error(llqr(x, y, tau=tau, x0=x0)$ll_est, )
})
test_that("Local linear estimation", {
set.seed(1234)
n <- 100
x <- rnorm(100); error <- rnorm(100); y <- x^2 + error
tau <- 0.5
llqr(x, y, tau = tau, method = 'CV')
})
test_that("Local linear estimation at x0", {
set.seed(1234)
n <- 100
x <- cbind(rnorm(n), rnorm(n)); error <- rnorm(100); y <- x[, 1]^2 + error
tau <- 0.5
x0 <- 1
expect_error(llqr(x, y, tau=tau, x0=x0)$ll_est, )
})
devtools::test()
test_that("the function gives an error message when the dimension of
x0 is less than that of x", {
set.seed(1234)
n <- 100
x <- cbind(rnorm(n), rnorm(n)); error <- rnorm(100); y <- x[, 1]^2 + error
tau <- 0.5
x0 <- 1
expect_error(llqr(x, y, tau=tau, x0=x0)$ll_est, )
})
set.seed(1234)
n <- 100
x <- rnorm(100); error <- rnorm(100); y <- x^2 + error
tau <- 0.5
llqr(x, y, tau = tau, method = 'CV')
test_that("Local linear estimation", {
set.seed(1234)
n <- 100
x <- rnorm(100); error <- rnorm(100); y <- x^2 + error
tau <- 0.5
expect_equalt(llqr(x, y, tau = tau, method = 'CV')$h, 0.3981072)
})
test_that("Local linear estimation", {
set.seed(1234)
n <- 100
x <- rnorm(100); error <- rnorm(100); y <- x^2 + error
tau <- 0.5
expect_equal(llqr(x, y, tau = tau, method = 'CV')$h, 0.3981072)
})
set.seed(1234)
n <- 100
x <- rnorm(100); error <- rnorm(100); y <- x^2 + error
tau <- 0.5
llqr(x, y, tau = tau, method = 'CV')$h
test_that("Local linear estimation", {
set.seed(1234)
n <- 100
x <- rnorm(100); error <- rnorm(100); y <- x^2 + error
tau <- 0.5
expect_identical(llqr(x, y, tau = tau, method = 'CV')$h, 0.3981072)
})
test_that("Local linear estimation", {
set.seed(1234)
n <- 100
x <- rnorm(100); error <- rnorm(100); y <- x^2 + error
tau <- 0.5
expect_equal(llqr(x, y, tau = tau, method = 'CV')$h, 0.3981072)
})
test_that("the function gives an error message when the dimension of
x0 is less than that of x", {
set.seed(1234)
n <- 100
x <- cbind(rnorm(n), rnorm(n)); error <- rnorm(100); y <- x[, 1]^2 + error
tau <- 0.5
x0 <- 1
expect_error(llqr(x, y, tau=tau, x0=x0)$ll_est, )
})
search()
devtools::load_all()
set.seed(1234)
n <- 100
x <- rnorm(100); error <- rnorm(100); y <- x^2 + error
tau <- c(0.25, 0.5, 0.75)
par(mfrow=c(2,2))
for (i in 1:length(tau)) {
plot(x, y, main=print(tau[i]))
points(x, llqr(x, y, tau=tau[i])$ll_est, pch=16, col='red')
}
devtools::load_all()
set.seed(1234)
n <- 100
x <- rnorm(100); error <- rnorm(100); y <- x^2 + error
tau <- c(0.25, 0.5, 0.75)
par(mfrow=c(2,2))
for (i in 1:length(tau)) {
plot(x, y, main=print(tau[i]))
points(x, llqr(x, y, tau=tau[i])$ll_est, pch=16, col='red')
}
devtools::load_all()
set.seed(1234)
n <- 100
x <- rnorm(100); error <- rnorm(100); y <- x^2 + error
tau <- c(0.25, 0.5, 0.75)
par(mfrow=c(2,2))
for (i in 1:length(tau)) {
plot(x, y, main=print(tau[i]))
points(x, llqr(x, y, tau=tau[i])$ll_est, pch=16, col='red')
}
test_that("the function gives an error message when the dimension of
x0 is less than that of x", {
set.seed(1234)
n <- 100
x <- cbind(rnorm(n), rnorm(n)); error <- rnorm(100); y <- x[, 1]^2 + error
tau <- 0.5
x0 <- 1
expect_error(llqr(x, y, tau=tau, x0=x0)$ll_est, )
})
set.seed(1234)
n <- 100
x <- cbind(rnorm(n), rnorm(n)); error <- rnorm(100); y <- x[, 1]^2 + error
tau <- 0.5
x0 <- 1
llqr(x, y, tau=tau, x0=x0)$ll_est
test_that("the function gives an error message when the dimension of
x0 is less than that of x", {
set.seed(1234)
n <- 100
x <- cbind(rnorm(n), rnorm(n)); error <- rnorm(100); y <- x[, 1]^2 + error
tau <- 0.5
x0 <- 1
expect_error(llqr(x, y, tau=tau, x0=x0)$ll_est, )
})
set.seed(1234)
n <- 100
x <- rnorm(100); error <- rnorm(100); y <- x^2 + error
tau <- 0.5
llqr(x, y, tau = tau, method = 'CV')
devtools::load_all()
# Create an .Rd file.  Add this to the R file and use
# or press Ctrl+Shift+D
devtools::document()
devtools::load_all()
# Create an .Rd file.  Add this to the R file and use
# or press Ctrl+Shift+D
devtools::document()
# Create an .Rd file.  Add this to the R file and use
# or press Ctrl+Shift+D
devtools::document()
devtools::load_all()
# Create an .Rd file.  Add this to the R file and use
# or press Ctrl+Shift+D
devtools::document()
devtools::load_all()
# Create an .Rd file.  Add this to the R file and use
# or press Ctrl+Shift+D
devtools::document()
devtools::load_all()
# Create an .Rd file.  Add this to the R file and use
# or press Ctrl+Shift+D
devtools::document()
devtools::load_all()
# Create an .Rd file.  Add this to the R file and use
# or press Ctrl+Shift+D
devtools::document()
devtools::load_all()
devtools::load_all()
set.seed(1234)
n <- 100
x <- rnorm(100); error <- rnorm(100); y <- x^2 + error
tau <- c(0.25, 0.5, 0.75)
par(mfrow=c(2,2))
for (i in 1:length(tau)) {
plot(x, y, main=print(tau[i]))
points(x, llqr(x, y, tau=tau[i])$ll_est, pch=16, col='red')
}
set.seed(1234)
n <- 100
x <- cbind(rnorm(n), rnorm(n)); error <- rnorm(100); y <- x[, 1]^2 + error
tau <- 0.5
x0 <- 1
llqr(x, y, tau=tau, x0=x0)$ll_est
test_that("the function gives an error message when the dimension of
x0 is less than that of x", {
set.seed(1234)
n <- 100
x <- cbind(rnorm(n), rnorm(n)); error <- rnorm(100); y <- x[, 1]^2 + error
tau <- 0.5
x0 <- 1
expect_error(llqr(x, y, tau=tau, x0=x0)$ll_est, )
})
# Create an .Rd file.  Add this to the R file and use
# or press Ctrl+Shift+D
devtools::document()
devtools::load_all()
llqr(x, y, tau=tau, x0=x0)$ll_est
set.seed(1234)
n <- 100
x <- rnorm(100); error <- rnorm(100); y <- x^2 + error
tau <- c(0.25, 0.5, 0.75)
par(mfrow=c(2,2))
for (i in 1:length(tau)) {
plot(x, y, main=print(tau[i]))
points(x, llqr(x, y, tau=tau[i])$ll_est, pch=16, col='red')
}
# Create an .Rd file.  Add this to the R file and use
# or press Ctrl+Shift+D
devtools::document()
# Create an .Rd file.  Add this to the R file and use
# or press Ctrl+Shift+D
devtools::document()
# Create an .Rd file.  Add this to the R file and use
# or press Ctrl+Shift+D
devtools::document()
# Create an .Rd file.  Add this to the R file and use
# or press Ctrl+Shift+D
devtools::document()
# Create an .Rd file.  Add this to the R file and use
# or press Ctrl+Shift+D
devtools::document()
# Create an .Rd file.  Add this to the R file and use
# or press Ctrl+Shift+D
devtools::document()
# Create an .Rd file.  Add this to the R file and use
# or press Ctrl+Shift+D
devtools::document()
set.seed(1234)
n <- 100
x <- rnorm(100); error <- rnorm(100); y <- x^2 + error
tau <- c(0.25, 0.5, 0.75)
par(mfrow=c(2,2))
for (i in 1:length(tau)) {
plot(x, y, main=print(tau[i]))
points(x, llqr(x, y, tau=tau[i])$ll_est, pch=16, col='red')
}
# Create an .Rd file.  Add this to the R file and use
# or press Ctrl+Shift+D
devtools::document()
set.seed(1234)
n <- 100
x <- rnorm(100); error <- rnorm(100); y <- x^2 + error
tau <- c(0.25, 0.5, 0.75)
par(mfrow=c(2,2))
for (i in 1:length(tau)) {
plot(x, y, main=print(tau[i]))
points(x, llqr(x, y, tau=tau[i])$ll_est, pch=16, col='red')
}
devtools::load_all()
n <- 100
x <- rnorm(100); error <- rnorm(100); y <- x^2 + error
tau <- 0.5
llqrcv(x, y, tau = tau)
# Create an .Rd file.  Add this to the R file and use
# or press Ctrl+Shift+D
devtools::document()
devtools::load_all()
citation()
citation('dr')
citation('quantreg')
# Create an .Rd file.  Add this to the R file and use
# or press Ctrl+Shift+D
devtools::document()
# Create an .Rd file.  Add this to the R file and use
# or press Ctrl+Shift+D
devtools::document()
# create citation file
usethis::use_citation()
citation('quantreg')
# Create an .Rd file.  Add this to the R file and use
# or press Ctrl+Shift+D
devtools::document()
devtools::load_all()
citation('quantdr')
devtools::load_all()
citation('quantdr')
devtools::load_all()
citation('quantdr')
devtools::load_all()
citation('quantdr')
devtools::load_all()
citation('quantdr')
devtools::load_all()
citation('quantdr')
devtools::load_all()
citation('quantdr')
devtools::load_all()
citation('quantdr')
citation("quantreg")
devtools::load_all()
citation('quantdr')
devtools::load_all()
citation('quantdr')
devtools::load_all()
citation('quantdr')
devtools::load_all()
citation('quantdr')
devtools::load_all()
citation('quantdr')
devtools::load_all()
citation('quantdr')
devtools::load_all()
citation('quantdr')
demo(package='dr')
demo(package='quantreg')
demo('Frank',package='quantreg')
?nlrq
nlrq
file.exists("~/.ssh/id_rsh.pub")
